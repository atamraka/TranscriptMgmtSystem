<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.agile</groupId>
  <artifactId>tms</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>tms Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  

 
<profiles>
      <!-- better to have keep this sonar profile in your maven settings.xml -->
      <profile>
            <id>SonarQube</id>
            <activation>
              <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                 <sonar.host.url>http://zibran-ci.cs.uno.edu:9000/</sonar.host.url>
                 <sonar.jdbc.username>admin</sonar.jdbc.username>
                 <sonar.jdbc.password>admin</sonar.jdbc.password>
                 <path.to.browser>/usr/bin/firefox</path.to.browser>
                 <sonar.exclusions>src/main/webapp/lib/*.**</sonar.exclusions>
                 <sonar.javascript.jstestdriver.reportsPath>target/jstestdriver</sonar.javascript.jstestdriver.reportsPath>
	           	 <sonar.javascript.lcov.reportPath>target/jstestdriver/jsTestDriver.conf-coverage.dat</sonar.javascript.lcov.reportPath>
            </properties>
          </profile>

  </profiles>
 
 
  <!-- 
 @Muralidhar
 Since the javascript folder is now a declared resource location, the content is automatically 
 copied to the generated maven artefact -->


  <build>
    
	<finalName>tms</finalName>	
	<resources>
      <resource>
          <directory>src/main/webapp/js</directory>
         <filtering>true</filtering>
      </resource>
  </resources>

  <plugins>
    
     <!-- Add following plugin for executing the jasmin test cases and code coverage -->
			<plugin>
				<groupId>com.googlecode.jstd-maven-plugin</groupId>
				<artifactId>jstd-maven-plugin</artifactId>
				<version>1.3.5.1</version>
				<configuration>
					<verbose>true</verbose>
					<browser>${path.to.browser}</browser>
					<port>9876</port>
					<testOutput>target/jstestdriver</testOutput>
					<!-- <runnerMode>DEBUG</runnerMode> -->
				</configuration>
				<executions>
					<execution>
						<id>run-tests</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
	
   
     <!-- @Suryamanipala   To created compressed versions of your javascript and css files the
          yuicompressor-maven-plugin is used. -->
       <!--      <plugin>
                <groupId>net.alchim31.maven</groupId>
  		<artifactId>yuicompressor-maven-plugin</artifactId>
  		<version>1.1</version>
                <executions>
                    <execution>
                        <id>compress-js</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            
            
  </plugins>
  
    </build>
    
   <!--  
   @suryamaipala
   
    With the help of jsdoc you can easily create your own separated documentation about 
    your code quite similar to javadoc.
    To integrate jsdoc and jslint into the build process the maven-jstools-plugin is used. -->
    
    <reporting>
        <plugins>
            <plugin>
                <groupId>gr.abiss.mvn.plugins</groupId>
                <artifactId>maven-jstools-plugin</artifactId>
                <version>0.7</version>
                <configuration>
                    <jsDir>src/main/webapp/js</jsDir>
                    <includePrivate>true</includePrivate>
                    <includeUndocumented>true</includeUndocumented>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>jslint</report>
                            <report>jsdoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
 
        <!--  
        @Muralidhar     
        added this plugin for configuring it to sonar -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>1.0-beta-2</version>
            </plugin>
 
 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.6</version>
            </plugin>
        </plugins>
    </reporting>
	
  
</project>